# -*- coding: utf-8 -*-# Form implementation generated from reading ui file 'checkChange.ui'## Created by: PyQt5 UI code generator 5.9## WARNING! All changes made in this file will be lost!import sysimport pymysqlimport datetimefrom PyQt5 import QtCore, QtGui, QtWidgetsclass checkChange(QtWidgets.QTableWidget):    def __init__(self):        super().__init__()        self.setupUi(self)    def setupUi(self, check):        check.setObjectName("check")        check.resize(983, 584)        self.horizontalLayoutWidget = QtWidgets.QWidget(check)        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(20, 5,860, 540))        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)        self.horizontalLayout.setObjectName("horizontalLayout")        self.checkLayout = QtWidgets.QVBoxLayout()        self.checkLayout.setObjectName("checkLayout")        self.gridLayout_3 = QtWidgets.QGridLayout()        self.gridLayout_3.setObjectName("gridLayout_3")        self.searchButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)        #self.searchButton.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.searchButton.setObjectName("searchButton")        self.gridLayout_3.addWidget(self.searchButton, 0, 2, 1, 1)        self.searchText = QtWidgets.QLineEdit(self.horizontalLayoutWidget)        #self.searchText.setStyleSheet("font: 16pt \"Adobe Arabic\";")        self.searchText.setText("")        self.searchText.setObjectName("searchText")        self.gridLayout_3.addWidget(self.searchText, 0, 0, 1, 1)        self.comboBox = QtWidgets.QComboBox(self.horizontalLayoutWidget)        #self.comboBox.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.comboBox.setObjectName("comboBox")        self.comboBox.addItem("")        self.comboBox.addItem("")        self.comboBox.addItem("")        self.gridLayout_3.addWidget(self.comboBox, 0, 3, 1, 1)        self.label_15 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_15.setStyleSheet("font: 30pt \"Adobe Arabic\";")        self.label_15.setText("")        self.label_15.setObjectName("label_15")        self.gridLayout_3.addWidget(self.label_15, 0, 1, 1, 1)        self.checkLayout.addLayout(self.gridLayout_3)        self.staffTable = QtWidgets.QTableWidget(self.horizontalLayoutWidget)        self.staffTable.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)        self.staffTable.setSelectionBehavior(QtWidgets.QTableWidget.SelectRows)        self.staffTable.setEnabled(True)        self.staffTable.setTabletTracking(False)        self.staffTable.setAcceptDrops(False)        self.staffTable.setLayoutDirection(QtCore.Qt.LeftToRight)        self.staffTable.setStyleSheet("")        self.staffTable.setAlternatingRowColors(True)        self.staffTable.setShowGrid(True)        self.staffTable.setWordWrap(False)        self.staffTable.setCornerButtonEnabled(True)        self.staffTable.setObjectName("staffTable")        self.staffTable.setColumnCount(5)        self.staffTable.setRowCount(4)        item = QtWidgets.QTableWidgetItem()        self.staffTable.setVerticalHeaderItem(0, item)        item = QtWidgets.QTableWidgetItem()        self.staffTable.setVerticalHeaderItem(1, item)        item = QtWidgets.QTableWidgetItem()        self.staffTable.setVerticalHeaderItem(2, item)        item = QtWidgets.QTableWidgetItem()        self.staffTable.setVerticalHeaderItem(3, item)        item = QtWidgets.QTableWidgetItem()        font = QtGui.QFont()        font.setPointSize(10)        item.setFont(font)        self.staffTable.setHorizontalHeaderItem(0, item)        item = QtWidgets.QTableWidgetItem()        self.staffTable.setHorizontalHeaderItem(1, item)        item = QtWidgets.QTableWidgetItem()        self.staffTable.setHorizontalHeaderItem(2, item)        item = QtWidgets.QTableWidgetItem()        self.staffTable.setHorizontalHeaderItem(3, item)        item = QtWidgets.QTableWidgetItem()        self.staffTable.setHorizontalHeaderItem(4, item)        self.staffTable.horizontalHeader().setVisible(True)        self.staffTable.horizontalHeader().setCascadingSectionResizes(False)        self.staffTable.horizontalHeader().setHighlightSections(True)        self.staffTable.horizontalHeader().setSortIndicatorShown(False)        self.staffTable.horizontalHeader().setStretchLastSection(True)        self.staffTable.verticalHeader().setVisible(False)        self.staffTable.verticalHeader().setCascadingSectionResizes(False)        self.staffTable.verticalHeader().setSortIndicatorShown(False)        self.staffTable.verticalHeader().setStretchLastSection(False)        self.checkLayout.addWidget(self.staffTable)        self.horizontalLayout.addLayout(self.checkLayout)        #self.label_4 = QtWidgets.QLabel(self.horizontalLayoutWidget)        #self.label_4.setObjectName("label_4")        #self.horizontalLayout.addWidget(self.label_4)        self.verticalLayout = QtWidgets.QVBoxLayout()        self.verticalLayout.setObjectName("verticalLayout")        self.formLayout = QtWidgets.QFormLayout()        self.formLayout.setObjectName("formLayout")        self.label = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label.setStyleSheet("font: 14pt \"Adobe Arabic\";\n""color: rgb(255, 0, 0);")        self.label.setObjectName("label")        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)        self.nowdate = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.nowdate.setStyleSheet("font: 20pt \"Adobe Arabic\";\n""color: rgb(255, 0, 0);")        self.nowdate.setObjectName("nowdate")        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.nowdate)        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_3.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_3.setObjectName("label_3")        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_3)        self.label_sname = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_sname.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_sname.setObjectName("label_sname")        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.label_sname)        self.label_5 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_5.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_5.setObjectName("label_5")        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_5)        self.label_sno = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_sno.setStyleSheet("font: 18pt \"Adobe Arabic\";")        self.label_sno.setObjectName("label_sno")        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.label_sno)        self.label_7 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_7.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_7.setObjectName("label_7")        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_7)        self.label_ssex = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_ssex.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_ssex.setObjectName("label_ssex")        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.label_ssex)        self.label_9 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_9.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_9.setObjectName("label_9")        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_9)        self.label_dname = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_dname.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_dname.setObjectName("label_dname")        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.label_dname)        self.label_11 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_11.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_11.setObjectName("label_11")        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_11)        self.label_pname = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_pname.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_pname.setObjectName("label_pname")        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.label_pname)        self.label_14 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_14.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_14.setObjectName("label_14")        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_14)        self.spinBox_tdays = QtWidgets.QSpinBox(self.horizontalLayoutWidget)        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)        sizePolicy.setHorizontalStretch(0)        sizePolicy.setVerticalStretch(0)        sizePolicy.setHeightForWidth(self.spinBox_tdays.sizePolicy().hasHeightForWidth())        self.spinBox_tdays.setSizePolicy(sizePolicy)        self.spinBox_tdays.setStyleSheet("font: 16pt \"Adobe Arabic\";")        self.spinBox_tdays.setMaximum(31)        self.spinBox_tdays.setObjectName("spinBox_tdays")        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.spinBox_tdays)        self.label_18 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_18.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_18.setObjectName("label_18")        self.formLayout.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.label_18)        self.spinBox_ldays = QtWidgets.QSpinBox(self.horizontalLayoutWidget)        self.spinBox_ldays.setStyleSheet("font: 16pt \"Adobe Arabic\";")        self.spinBox_ldays.setMaximum(31)        self.spinBox_ldays.setObjectName("spinBox_ldays")        self.formLayout.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.spinBox_ldays)        self.label_19 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_19.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_19.setObjectName("label_19")        self.formLayout.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.label_19)        self.spinBox_adays = QtWidgets.QSpinBox(self.horizontalLayoutWidget)        self.spinBox_adays.setStyleSheet("font: 16pt \"Adobe Arabic\";")        self.spinBox_adays.setMaximum(31)        self.spinBox_adays.setObjectName("spinBox_adays")        self.formLayout.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.spinBox_adays)        self.label_20 = QtWidgets.QLabel(self.horizontalLayoutWidget)        self.label_20.setStyleSheet("font: 12pt \"Adobe Arabic\";")        self.label_20.setObjectName("label_19")        self.formLayout.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.label_20)        self.spinBox_odays = QtWidgets.QSpinBox(self.horizontalLayoutWidget)        self.spinBox_odays.setStyleSheet("font: 16pt \"Adobe Arabic\";")        self.spinBox_odays.setMaximum(31)        self.spinBox_odays.setObjectName("spinBox_adays")        self.formLayout.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.spinBox_odays)        self.verticalLayout.addLayout(self.formLayout)        self.submitButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)        self.submitButton.setStyleSheet("font: 16pt \"Adobe Arabic\";")        self.submitButton.setObjectName("submitButton")        self.submitButton.setStyleSheet("background-color:rgb(255, 57, 60);\n"                                         "color: rgb(255, 255, 255);\n"                                         "font: 75 14pt \"Adobe Arabic\";\n"                                         "")        self.verticalLayout.addWidget(self.submitButton)        self.horizontalLayout.addLayout(self.verticalLayout)        self.horizontalLayoutWidget.raise_()        self.submitButton.raise_()        self.retranslateUi(check)        QtCore.QMetaObject.connectSlotsByName(check)        self.readMysql()        self.staffTable.clicked.connect(self.setInfo)        self.searchButton.clicked.connect(self.searchRecord)        self.searchText.editingFinished.connect(self.searchRecord)        self.submitButton.clicked.connect(self.submitInfo)    def retranslateUi(self, check):        _translate = QtCore.QCoreApplication.translate        check.setWindowTitle(_translate("check", "Form"))        self.searchButton.setText(_translate("check", "查询"))        self.comboBox.setItemText(0, _translate("check", "按姓名查找"))        self.comboBox.setItemText(1, _translate("check", "按工号查找"))        self.comboBox.setItemText(2, _translate("check", "按部门查找"))        self.staffTable.setSortingEnabled(False)        item = self.staffTable.verticalHeaderItem(0)        item.setText(_translate("check", "New Row"))        item = self.staffTable.verticalHeaderItem(1)        item.setText(_translate("check", "New Row"))        item = self.staffTable.verticalHeaderItem(2)        item.setText(_translate("check", "New Row"))        item = self.staffTable.verticalHeaderItem(3)        item.setText(_translate("check", "New Row"))        item = self.staffTable.horizontalHeaderItem(0)        item.setText(_translate("check", "员工编号"))        item = self.staffTable.horizontalHeaderItem(1)        item.setText(_translate("check", "姓名"))        item = self.staffTable.horizontalHeaderItem(2)        item.setText(_translate("check", "性别"))        item = self.staffTable.horizontalHeaderItem(3)        item.setText(_translate("check", "部门"))        item = self.staffTable.horizontalHeaderItem(4)        item.setText(_translate("check", "职位"))        #self.label_4.setText(_translate("check", "       "))        self.label.setText(_translate("check", "当前日期："))        self.nowdate.setText(_translate("check", "2018-09"))        self.label_3.setText(_translate("check", "姓名："))        self.label_sname.setText(_translate("check", ""))        self.label_5.setText(_translate("check", "员工编号："))        self.label_sno.setText(_translate("check", ""))        self.label_7.setText(_translate("check", "性别："))        self.label_ssex.setText(_translate("check", ""))        self.label_9.setText(_translate("check", "部门："))        self.label_dname.setText(_translate("check", ""))        self.label_11.setText(_translate("check", "职位："))        self.label_pname.setText(_translate("check", ""))        self.label_14.setText(_translate("check", "出勤日:"))        self.label_18.setText(_translate("check", "请假日:"))        self.label_19.setText(_translate("check", "矿工日:"))        self.label_20.setText(_translate("check", "加班日:"))        self.submitButton.setText(_translate("check", "确认"))    def readMysql(self):        db = pymysql.connect("localhost", "root", "123456", db="personnel_man")        cur = db.cursor()        sql = "select s.s_no,s_name,s_sex,d.d_name,p.p_name from staff as s,sp,department as d,professional as p "+\              " where s.s_no = sp.s_no and sp.d_no=d.d_no and sp.p_no=p.p_no order by (s.s_no+0) desc"        try:           cur.execute(sql)        except Exception as e:            print(e)        len = cur.fetchall().__len__()        cur.execute(sql)        self.staffTable.setRowCount(len)        k = 0        for i in cur:            w = 0            for j in i:                newItem = QtWidgets.QTableWidgetItem(str(j))                self.staffTable.setItem(k, w, newItem)                w += 1            k += 1        year_month = datetime.datetime.now().strftime('%Y-%m')        self.nowdate.setText(year_month)        cur.close()        db.close()    def searchRecord(self):        db = pymysql.connect("localhost", "root", "123456", db="personnel_man")        cur = db.cursor()        if (self.searchText.text() == ""):            sql = "select s.s_no,s_name,s_sex,d.d_name,p.p_name from staff as s,sp,department as d,professional as p " + \                  " where s.s_no = sp.s_no and sp.d_no=d.d_no and sp.p_no=p.p_no order by (s.s_no+0) desc"            cur.execute(sql)            len = cur.fetchall().__len__()            cur.execute(sql)            self.staffTable.setRowCount(len)            k = 0            for i in cur:                w = 0                for j in i:                    newItem = QtWidgets.QTableWidgetItem(str(j))                    self.staffTable.setItem(k, w, newItem)                    w += 1                k += 1            return        # 输入框内容        temp = self.searchText.text()        s = '%' + temp + '%'        # 分类查询        conditionChoice = self.comboBox.currentText()        if (conditionChoice == "按姓名查找"):            sql = "select s.s_no,s_name,s_sex,d.d_name,p.p_name from staff as s,sp,department as d,professional as p " + \                  " where s.s_no = sp.s_no and sp.d_no=d.d_no and sp.p_no=p.p_no"+\                  " and s.s_name LIKE '%s' order by (s.s_no+0) desc" % (s)        elif (conditionChoice == "按工号查找"):            sql = "select s.s_no,s_name,s_sex,d.d_name,p.p_name from staff as s,sp,department as d,professional as p " + \                  " where s.s_no = sp.s_no and sp.d_no=d.d_no and sp.p_no=p.p_no" + \                  " and s.s_no LIKE '%s' order by (s.s_no+0) desc" % (s)        elif (conditionChoice == "按部门查找"):            sql = "select s.s_no,s_name,s_sex,d.d_name,p.p_name from staff as s,sp,department as d,professional as p " + \                  " where s.s_no = sp.s_no and sp.d_no=d.d_no and sp.p_no=p.p_no" + \                  " and d.d_name LIKE '%s' order by (s.s_no+0) desc" % (s)        self.staffTable.clearContents()        # 清空表格        # 重新查找后生成表格        cur.execute(sql)        len = cur.fetchall().__len__()        cur.execute(sql)        self.staffTable.setRowCount(len)        k = 0        for i in cur:            w = 0            for j in i:                newItem = QtWidgets.QTableWidgetItem(str(j))                self.staffTable.setItem(k, w, newItem)                w += 1            k += 1        cur.close()        db.close()    def setInfo(self):        row = self.staffTable.currentRow()        sno = self.staffTable.item(row, 0).text()        sname = self.staffTable.item(row, 1).text()        ssex = self.staffTable.item(row, 2).text()        dname = self.staffTable.item(row, 3).text()        pname = self.staffTable.item(row, 4).text()        self.label_sno.setText(sno)        self.label_sname.setText(sname)        self.label_ssex.setText(ssex)        self.label_pname.setText(pname)        self.label_dname.setText(dname)    def submitInfo(self):        db = pymysql.connect("localhost", "root", "123456", db="personnel_man")        cur = db.cursor()        row = self.staffTable.currentRow()        test = self.label_sno.text()        #判断当前是否有选中的员工        if test == '':            QtWidgets.QMessageBox.question(self, '提示框',                                           "你还未填写信息！", QtWidgets.QMessageBox.Yes)            return        #获取当前列表中的信息，并且显示在旁边        sno = self.staffTable.item(row, 0).text()        date = self.nowdate.text()        c_odays = self.spinBox_odays.text()        c_adays = self.spinBox_adays.text()        c_ldays = self.spinBox_ldays.text()        c_tdays = self.spinBox_tdays.text()        print(c_odays,c_adays,c_ldays,c_tdays)        #数据库中有本月记录        sql = "select * from checking where s_no = '%s' and c_date = '%s'"%(sno,date)        cur.execute(sql)        len = cur.fetchall().__len__()        if len == 0:            sql = "insert into checking values ('%s','%s','%s','%s','%s','%s')" %(sno,date,c_tdays,c_ldays,c_odays,c_adays)            try:                cur.execute(sql)                QtWidgets.QMessageBox.question(self, '提示框',                                               "添加成功！" , QtWidgets.QMessageBox.Yes)                db.commit()            except Exception as e:                print(e)        else:            reply = QtWidgets.QMessageBox.question(self, '提示框',                                                   "数据库中已有%s的数据是否要修改?"%(date), QtWidgets.QMessageBox.Yes |                                                   QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.No)            if reply == QtWidgets.QMessageBox.Yes:                sql = "update checking set c_odays = '%s',c_adays = '%s',c_ldays ='%s',c_tdays = '%s' where s_no='%s' and c_date = '%s'"\                      %(c_odays,c_adays,c_ldays,c_tdays,sno,date)                try:                    cur.execute(sql)                    QtWidgets.QMessageBox.question(self, '提示框',                                                   "修改成功！", QtWidgets.QMessageBox.Yes)                    db.commit()                except Exception as e:                    print(e)            else:                returnif __name__ == "__main__":    app = QtWidgets.QApplication(sys.argv)    mainMindow = checkChange()    mainMindow.show()    sys.exit(app.exec_())