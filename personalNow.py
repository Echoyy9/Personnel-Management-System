# -*- coding: utf-8 -*-# Form implementation generated from reading ui file 'personalTable1.ui'## Created by: PyQt5 UI code generator 5.9## WARNING! All changes made in this file will be lost!#人员调动界面import sysfrom PyQt5 import QtCore, QtGui, QtWidgetsimport pymysqlfrom personaldialog import changePersonelDialogclass personnel_now(QtWidgets.QWidget):    def __init__(self):        super().__init__()        self.setupUi(self)    def setupUi(self, personal):        personal.setObjectName("personal")        personal.resize(910, 589)        self.searchButton = QtWidgets.QPushButton(personal)        self.searchButton.setGeometry(QtCore.QRect(640, 5, 91, 35))        self.searchButton.setObjectName("searchButton")        self.comboBox = QtWidgets.QComboBox(personal)        self.comboBox.setGeometry(QtCore.QRect(750, 5, 121, 34))        self.comboBox.setObjectName("comboBox")        self.comboBox.addItem("")        self.comboBox.addItem("")        self.personalTable = QtWidgets.QTableWidget(personal)        self.personalTable.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)        self.personalTable.setSelectionBehavior(QtWidgets.QTableWidget.SelectRows)        self.personalTable.setGeometry(QtCore.QRect(5, 50, 870, 490))        self.personalTable.setLayoutDirection(QtCore.Qt.LeftToRight)        self.personalTable.setAlternatingRowColors(True)        self.personalTable.setShowGrid(True)        self.personalTable.setWordWrap(False)        self.personalTable.setCornerButtonEnabled(True)        self.personalTable.setObjectName("personalTable")        self.personalTable.setColumnCount(7)        self.personalTable.setRowCount(10)        item = QtWidgets.QTableWidgetItem()        self.personalTable.setVerticalHeaderItem(0, item)        item = QtWidgets.QTableWidgetItem()        self.personalTable.setVerticalHeaderItem(1, item)        item = QtWidgets.QTableWidgetItem()        self.personalTable.setVerticalHeaderItem(2, item)        item = QtWidgets.QTableWidgetItem()        font = QtGui.QFont()        font.setPointSize(10)        item.setFont(font)        self.personalTable.setHorizontalHeaderItem(0, item)        item = QtWidgets.QTableWidgetItem()        self.personalTable.setHorizontalHeaderItem(1, item)        item = QtWidgets.QTableWidgetItem()        self.personalTable.setHorizontalHeaderItem(2, item)        item = QtWidgets.QTableWidgetItem()        self.personalTable.setHorizontalHeaderItem(3, item)        item = QtWidgets.QTableWidgetItem()        self.personalTable.setHorizontalHeaderItem(4, item)        item = QtWidgets.QTableWidgetItem()        self.personalTable.setHorizontalHeaderItem(5, item)        item = QtWidgets.QTableWidgetItem()        self.personalTable.setHorizontalHeaderItem(6, item)        self.personalTable.horizontalHeader().setSortIndicatorShown(False)        self.personalTable.horizontalHeader().setStretchLastSection(True)        self.personalTable.verticalHeader().setVisible(False)        self.personalTable.verticalHeader().setCascadingSectionResizes(False)        self.personalTable.verticalHeader().setSortIndicatorShown(False)        self.personalTable.verticalHeader().setStretchLastSection(False)        self.searchText = QtWidgets.QLineEdit(personal)        self.searchText.setGeometry(QtCore.QRect(5, 5, 600, 35))        self.searchText.setObjectName("searchText")        self.retranslateUi(personal)        self.readMysql()        self.searchButton.clicked.connect(self.searchRecord)        self.searchText.editingFinished.connect(self.searchRecord)        self.personalTable.doubleClicked.connect(self.changePerson)        QtCore.QMetaObject.connectSlotsByName(personal)    def retranslateUi(self, personal):        _translate = QtCore.QCoreApplication.translate        personal.setWindowTitle(_translate("personal", "Form"))        self.searchButton.setText(_translate("personal", "查询"))        self.comboBox.setItemText(0, _translate("personal", "按姓名查找"))        self.comboBox.setItemText(1, _translate("personal", "按工号查找"))        self.personalTable.setSortingEnabled(False)        item = self.personalTable.verticalHeaderItem(1)        item.setText(_translate("personal", "New Row"))        item = self.personalTable.verticalHeaderItem(2)        item.setText(_translate("personal", "New Row"))        item = self.personalTable.horizontalHeaderItem(0)        item.setText(_translate("personal", "员工编号"))        item = self.personalTable.horizontalHeaderItem(1)        item.setText(_translate("personal", "姓名"))        item = self.personalTable.horizontalHeaderItem(2)        item.setText(_translate("personal", "性别"))        item = self.personalTable.horizontalHeaderItem(3)        item.setText(_translate("personal", "电话"))        item = self.personalTable.horizontalHeaderItem(4)        item.setText(_translate("personal", "部门"))        item = self.personalTable.horizontalHeaderItem(5)        item.setText(_translate("personal", "职位"))        item = self.personalTable.horizontalHeaderItem(6)        item.setText(_translate("personal", "时间"))        __sortingEnabled = self.personalTable.isSortingEnabled()        self.personalTable.setSortingEnabled(False)        self.personalTable.setSortingEnabled(__sortingEnabled)    def readMysql(self):        db = pymysql.connect("localhost", "root", "123456", db="personnel_man")        cur = db.cursor()        sql = "select sp.s_no,staff.s_name,staff.s_sex,staff.s_num,d.d_name,p.p_name,entry_time from sp,staff,department as d,professional as p"+\              " where sp.s_no = staff.s_no and sp.p_no = p.p_no and sp.d_no = d.d_no order by sp.entry_time desc"        cur.execute(sql)        len = cur.fetchall().__len__()        cur.execute(sql)        self.personalTable.setRowCount(len)        k=0        for i in cur:            w=0            for j in i:                newItem = QtWidgets.QTableWidgetItem(str(j))                self.personalTable.setItem(k,w,newItem)                w += 1            k+=1        cur.close()    # 点击查询    def searchRecord(self):        db = pymysql.connect("localhost", "root", "123456", db="personnel_man")        cur = db.cursor()        if (self.searchText.text() == ""):            sql = "select sp.s_no,staff.s_name,staff.s_sex,staff.s_num,d.d_name,p.p_name,entry_time from sp,staff,department as d,professional as p" + \                  " where sp.s_no = staff.s_no and sp.p_no = p.p_no and sp.d_no = d.d_no order by sp.entry_time desc"            cur.execute(sql)            len = cur.fetchall().__len__()            cur.execute(sql)            self.personalTable.setRowCount(len)            k = 0            for i in cur:                w = 0                for j in i:                    newItem = QtWidgets.QTableWidgetItem(str(j))                    self.personalTable.setItem(k, w, newItem)                    w += 1                k += 1            return        #输入框内容        temp = self.searchText.text()        s = '%'+temp+'%'        # 分类查询        conditionChoice = self.comboBox.currentText()        if (conditionChoice == "按姓名查找"):            sql = "select sp.s_no,staff.s_name,staff.s_sex,staff.s_num,d.d_name,p.p_name,entry_time from sp,staff,department as d,professional as p" + \                  " where sp.s_no = staff.s_no and sp.p_no = p.p_no and sp.d_no = d.d_no and staff.s_name LIKE '%s' order by sp.entry_time desc " % ( s)        elif (conditionChoice == "按工号查找"):            sql = "select sp.s_no,staff.s_name,staff.s_sex,staff.s_num,d.d_name,p.p_name,entry_time from sp,staff,department as d,professional as p" + \                  " where sp.s_no = staff.s_no and sp.p_no = p.p_no and sp.d_no = d.d_no and staff.s_no LIKE '%s' order by sp.entry_time desc " % (s)        print(sql)        self.personalTable.clearContents()        #清空表格        #重新查找后生成表格        cur.execute(sql)        len = cur.fetchall().__len__()        cur.execute(sql)        self.personalTable.setRowCount(len)        k=0        for i in cur:            w=0            for j in i:                newItem = QtWidgets.QTableWidgetItem(str(j))                self.personalTable.setItem(k,w,newItem)                w += 1            k+=1        if (self.searchText.text() == ""):            pass        cur.close()        db.close()    def changePerson(self):        _translate = QtCore.QCoreApplication.translate        row = self.personalTable.currentRow()        sno = self.personalTable.item(row,0).text()        sname = self.personalTable.item(row,1).text()        #获取当前部门        predepartment = self.personalTable.item(row,4).text()        prepost = self.personalTable.item(row,5).text()        print("predepartment"+predepartment)        print("prepost"+prepost)        changeDialog = changePersonelDialog(self)        #填入相应信息        changeDialog.line_sname.setText(_translate("personalDialog", sname))        changeDialog.line_sno.setText(_translate("personalDialog", sno))        changeDialog.line_predepart.setText(_translate("personalDialog", predepartment))        changeDialog.line_prepost.setText(_translate("personalDialog", prepost))        changeDialog.add_info_success_signal.connect(self.readMysql)        changeDialog.show()        changeDialog.exec_()if __name__ == "__main__":    app = QtWidgets.QApplication(sys.argv)    mainMindow = personnel_now()    mainMindow.show()    sys.exit(app.exec_())